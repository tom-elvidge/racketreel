{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.1",
    "title": "Matches Service"
  },
  "servers": [
    {
      "description": "development",
      "url": "http://localhost:8080"
    },
    {
      "description": "mock",
      "url": "http://localhost:4010"
    }
  ],
  "paths": {
    "/api/v1/matches": {
      "get": {
        "summary": "List all matches",
        "operationId": "ListMatches",
        "tags": [
          "matches"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "How many items to return per page",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Which page to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "complete",
            "in": "query",
            "description": "Filter matches based on if they are complete",
            "required": false,
            "schema": {
              "type": "bool"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ListMatchesResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }, 
      "post": {
        "summary": "Create a new match",
        "operationId": "CreateMatch",
        "tags": [
          "matches"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateMatchCommand"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/MatchResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/v1/matches/{matchId}": {
      "get": {
        "summary": "Get a match",
        "operationId": "GetMatch",
        "tags": [
          "match"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/MatchResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/v1/matches/{matchId}/states": {
      "post": {
        "summary": "Create a new match state",
        "operationId": "CreateMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to create a state for",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/CreateMatchStateCommand"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/StateResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequestResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/v1/matches/{matchId}/states/{stateId}": {
      "get": {
        "summary": "Get match state",
        "operationId": "GetMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "description": "The id of the state to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StateResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Update the match state",
        "operationId": "UpdateMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "stateId",
            "in": "path",
            "required": true,
            "description": "The id of the state to update",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateMatchStateCommand"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StateResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/api/v1/matches/{matchId}/states/latest": {
      "get": {
        "summary": "Get latest match state",
        "operationId": "GetLatestMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/StateResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "summary": "Delete latest match state",

        "operationId": "DeleteLatestMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to get",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/DeleteStateResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "409": {
            "$ref": "#/components/responses/ConflictResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "put": {
        "summary": "Update the latest match state",
        "operationId": "UpdateLatestMatchState",
        "tags": [
          "match",
          "state"
        ],
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "description": "The id of the match to update the latest state of",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UpdateMatchStateCommand"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/StateResponse"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "requestBodies": {
      "CreateMatchCommand": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "players",
                "sets",
                "setType",
                "finalSetType"
              ],
              "properties": {
                "players": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "servingFirst": {
                  "type": "string"
                },
                "sets": {
                  "type": "integer",
                  "format": "int32"
                },
                "setType": {
                  "type": "string"
                },
                "finalSetType": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "CreateMatchStateCommand": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "pointTo"
              ],
              "properties": {
                "pointTo": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UpdateMatchStateCommand": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "required": [
                "highlight"
              ],
              "properties": {
                "highlight": {
                  "type": "bool"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "NotFoundResponse": {
        "description": "Not found"
      },
      "BadRequestResponse": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ConflictResponse": {
        "description": "Conflict request",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "An unexpected error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "ListMatchesResponse": {
        "description": "A paged list of matches",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "pageSize",
                "pageNumber",
                "data"
              ],
              "properties": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32"
                },
                "pageNumber": {
                  "type": "integer",
                  "format": "int32"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Match"
                  }
                }
              }
            }
          }
        }
      },
      "MatchResponse": {
        "description": "The match",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/Match"
                }
              }
            }
          }
        }
      },
      "StateResponse": {
        "description": "A match state",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/MatchState"
                }
              }
            }
          }
        }
      },
      "DeleteStateResponse": {
        "description": "Delete latest match state"
      }
    },
    "schemas": {
      "MatchSummary": {
        "type": "object",
        "required": [
          "completedDateTime",
          "winner",
          "sets"
        ],
        "properties": {
          "completedDateTime": {
            "type": "string"
          },
          "winner": {
            "type": "string"
          },
          "sets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SetSummary"
            }
          }
        }
      },
      "SetSummary": {
        "type": "object",
        "required": [
          "completedDateTime",
          "winner",
          "tieBreak"
        ],
        "properties": {
          "completedDateTime": {
            "type": "string"
          },
          "winner": {
            "type": "string"
          },
          "tieBreak": {
            "type": "bool"
          },
          "score": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PlayerSetScore"
            }
          }
        }
      },
      "PlayerSetScore": {
        "type": "object",
        "required": [
          "games",
          "tieBreakPoints"
        ],
        "properties": {
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "tieBreakPoints": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Match": {
        "type": "object",
        "required": [
          "id",
          "createdDateTime",
          "players",
          "sets",
          "setType",
          "finalSetType",
          "complete",
          "servingFirst"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "players": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "servingFirst": {
            "type": "string"
          },
          "sets": {
            "type": "integer",
            "format": "int32"
          },
          "setType": {
            "type": "string"
          },
          "finalSetType": {
            "type": "string"
          },
          "complete": {
            "type": "bool"
          },
          "summary": {
            "$ref": "#/components/schemas/MatchSummary"
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchState"
            }
          }
        }
      },
      "MatchState": {
        "type": "object",
        "required": [
          "createdDateTime",
          "serving",
          "score",
          "isTieBreak",
          "highlight"
        ],
        "properties": {
          "createdDateTime": {
            "type": "string"
          },
          "serving": {
            "type": "string"
          },
          "score": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PlayerScore"
            }
          },
          "isTieBreak": {
            "type": "bool"
          },
          "highlight": {
            "type": "bool"
          }
        }
      },
      "PlayerScore": {
        "type": "object",
        "required": [
          "points",
          "games",
          "sets"
        ],
        "properties": {
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "games": {
            "type": "integer",
            "format": "int32"
          },
          "sets": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}